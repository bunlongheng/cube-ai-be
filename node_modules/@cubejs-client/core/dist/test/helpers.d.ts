export declare const DescriptiveQueryRequest: {
    timeDimensions: ({
        dimension: string;
        granularity: string;
        dateRange?: undefined;
    } | {
        dimension: string;
        dateRange: string[];
        granularity?: undefined;
    })[];
    filters: {
        member: string;
        operator: string;
    }[];
    dimensions: string[];
    measures: string[];
    segments: string[];
};
export declare const DescriptiveQueryRequestCompact: {
    timeDimensions: ({
        dimension: string;
        granularity: string;
        dateRange?: undefined;
    } | {
        dimension: string;
        dateRange: string[];
        granularity?: undefined;
    })[];
    filters: {
        member: string;
        operator: string;
    }[];
    dimensions: string[];
    measures: string[];
    segments: string[];
    responseFormat: string;
};
export declare const DescriptiveQueryResponse: {
    queryType: string;
    results: {
        query: {
            measures: string[];
            dimensions: string[];
            timeDimensions: ({
                dimension: string;
                granularity: string;
                dateRange?: undefined;
            } | {
                dimension: string;
                dateRange: string[];
                granularity?: undefined;
            })[];
            segments: string[];
            limit: number;
            total: boolean;
            timezone: string;
            filters: {
                member: string;
                operator: string;
            }[];
            rowLimit: number;
        };
        lastRefreshTime: string;
        refreshKeyValues: {
            refresh_key: string;
        }[][];
        usedPreAggregations: {};
        transformedQuery: {
            sortedDimensions: string[];
            sortedTimeDimensions: string[][];
            timeDimensions: (string | null)[][];
            measures: string[];
            leafMeasureAdditive: boolean;
            leafMeasures: string[];
            measureToLeafMeasures: {
                'base_orders.count': {
                    measure: string;
                    additive: boolean;
                    type: string;
                }[];
            };
            hasNoTimeDimensionsWithoutGranularity: boolean;
            allFiltersWithinSelectedDimensions: boolean;
            isAdditive: boolean;
            granularityHierarchies: {
                'line_items_to_orders.created_at.year': string[];
                'line_items_to_orders.created_at.quarter': string[];
                'line_items_to_orders.created_at.month': string[];
                'line_items_to_orders.created_at.week': string[];
                'line_items_to_orders.created_at.day': string[];
                'line_items_to_orders.created_at.hour': string[];
                'line_items_to_orders.created_at.minute': string[];
                'line_items_to_orders.created_at.second': string[];
                'orders_to_line_items.created_at.year': string[];
                'orders_to_line_items.created_at.quarter': string[];
                'orders_to_line_items.created_at.month': string[];
                'orders_to_line_items.created_at.week': string[];
                'orders_to_line_items.created_at.day': string[];
                'orders_to_line_items.created_at.hour': string[];
                'orders_to_line_items.created_at.minute': string[];
                'orders_to_line_items.created_at.second': string[];
                'orders_to_line_items.completed_at.year': string[];
                'orders_to_line_items.completed_at.quarter': string[];
                'orders_to_line_items.completed_at.month': string[];
                'orders_to_line_items.completed_at.week': string[];
                'orders_to_line_items.completed_at.day': string[];
                'orders_to_line_items.completed_at.hour': string[];
                'orders_to_line_items.completed_at.minute': string[];
                'orders_to_line_items.completed_at.second': string[];
                'products.created_at.year': string[];
                'products.created_at.quarter': string[];
                'products.created_at.month': string[];
                'products.created_at.week': string[];
                'products.created_at.day': string[];
                'products.created_at.hour': string[];
                'products.created_at.minute': string[];
                'products.created_at.second': string[];
                'simple_orders.created_at.year': string[];
                'simple_orders.created_at.quarter': string[];
                'simple_orders.created_at.month': string[];
                'simple_orders.created_at.week': string[];
                'simple_orders.created_at.day': string[];
                'simple_orders.created_at.hour': string[];
                'simple_orders.created_at.minute': string[];
                'simple_orders.created_at.second': string[];
                'simple_orders_sql_ext.created_at.year': string[];
                'simple_orders_sql_ext.created_at.quarter': string[];
                'simple_orders_sql_ext.created_at.month': string[];
                'simple_orders_sql_ext.created_at.week': string[];
                'simple_orders_sql_ext.created_at.day': string[];
                'simple_orders_sql_ext.created_at.hour': string[];
                'simple_orders_sql_ext.created_at.minute': string[];
                'simple_orders_sql_ext.created_at.second': string[];
                'users.created_at.year': string[];
                'users.created_at.quarter': string[];
                'users.created_at.month': string[];
                'users.created_at.week': string[];
                'users.created_at.day': string[];
                'users.created_at.hour': string[];
                'users.created_at.minute': string[];
                'users.created_at.second': string[];
                'base_orders.created_at.year': string[];
                'base_orders.created_at.quarter': string[];
                'base_orders.created_at.month': string[];
                'base_orders.created_at.week': string[];
                'base_orders.created_at.day': string[];
                'base_orders.created_at.hour': string[];
                'base_orders.created_at.minute': string[];
                'base_orders.created_at.second': string[];
                'base_orders.completed_at.year': string[];
                'base_orders.completed_at.quarter': string[];
                'base_orders.completed_at.month': string[];
                'base_orders.completed_at.week': string[];
                'base_orders.completed_at.day': string[];
                'base_orders.completed_at.hour': string[];
                'base_orders.completed_at.minute': string[];
                'base_orders.completed_at.second': string[];
                'base_orders.event_date.year': string[];
                'base_orders.event_date.quarter': string[];
                'base_orders.event_date.month': string[];
                'base_orders.event_date.week': string[];
                'base_orders.event_date.day': string[];
                'base_orders.event_date.hour': string[];
                'base_orders.event_date.minute': string[];
                'base_orders.event_date.second': string[];
                'base_orders.event_date.fiscal_year': string[];
                'base_orders.event_date.fiscal_quarter': string[];
                'check_dup_names.created_at.year': string[];
                'check_dup_names.created_at.quarter': string[];
                'check_dup_names.created_at.month': string[];
                'check_dup_names.created_at.week': string[];
                'check_dup_names.created_at.day': string[];
                'check_dup_names.created_at.hour': string[];
                'check_dup_names.created_at.minute': string[];
                'check_dup_names.created_at.second': string[];
            };
            hasMultipliedMeasures: boolean;
            hasCumulativeMeasures: boolean;
            windowGranularity: null;
            filterDimensionsSingleValueEqual: null;
            ownedDimensions: string[];
            ownedTimeDimensionsWithRollupGranularity: string[][];
            ownedTimeDimensionsAsIs: (string | null)[][];
            allBackAliasMembers: {};
            ungrouped: null;
            sortedUsedCubePrimaryKeys: null;
            sortedAllCubeNames: null;
            hasMultiStage: boolean;
        };
        requestId: string;
        annotation: {
            measures: {
                'base_orders.count': {
                    title: string;
                    shortTitle: string;
                    type: string;
                    drillMembers: string[];
                    drillMembersGrouped: {
                        measures: never[];
                        dimensions: string[];
                    };
                };
            };
            dimensions: {
                'base_orders.status': {
                    title: string;
                    shortTitle: string;
                    type: string;
                    meta: {
                        addDesc: string;
                        moreNum: number;
                    };
                };
            };
            timeDimensions: {
                'base_orders.created_at': {
                    title: string;
                    shortTitle: string;
                    type: string;
                };
                'base_orders.created_at.month': {
                    title: string;
                    shortTitle: string;
                    type: string;
                    granularity: {
                        name: string;
                        title: string;
                        interval: string;
                    };
                };
            };
            segments: {
                'users.sf_users': {
                    title: string;
                    shortTitle: string;
                };
            };
        };
        dataSource: string;
        dbType: string;
        extDbType: string;
        external: boolean;
        slowQuery: boolean;
        total: number;
        data: {
            'base_orders.created_at.month': string;
            'base_orders.created_at': string;
            'base_orders.count': string;
            'base_orders.status': string;
        }[];
    }[];
    pivotQuery: {
        measures: string[];
        dimensions: string[];
        timeDimensions: ({
            dimension: string;
            granularity: string;
            dateRange?: undefined;
        } | {
            dimension: string;
            dateRange: string[];
            granularity?: undefined;
        })[];
        segments: string[];
        limit: number;
        total: boolean;
        timezone: string;
        filters: {
            member: string;
            operator: string;
        }[];
        rowLimit: number;
        queryType: string;
    };
    slowQuery: boolean;
};
export declare const NumericCastedData: {
    'base_orders.count': number;
    'base_orders.created_at.month': string;
    'base_orders.created_at': string;
    'base_orders.status': string;
}[];
//# sourceMappingURL=helpers.d.ts.map